name: Gradle CI

on:
  push:
  pull_request:
    branches:
      - main

jobs:
  # Basic Gradle wrapper validation. This step is run first, due to security
  # concerns. Running our whole pipeline with Gradle with a corrupt wrapper,
  # could expose our secrets, and we definitely want to prevent this.
  validation:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: Gradle wrapper validation
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

  # Basic Compliance check. Checks if codeStyle is correct and if reuse
  # is applied correctly
  compliance:
    runs-on: ubuntu-latest
    name: Compliance check
    needs: validation
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: REUSE Compliance Check
        uses: fsfe/reuse-action@v1
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          cache: 'gradle'
      - name: Gradle build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: spotlessCheck

  # One Basic check, for all kind of OS - to check if we have some kind of
  # issue with any kind of OS
  basic:
    strategy:
      matrix:
        os: [ ubuntu, macos, windows ]
    runs-on: ${{ matrix.os }}-latest
    name: on ${{ matrix.os }}
    needs: validation
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          cache: 'gradle'
      - name: Gradle build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: check -x spotlessCheck
      - uses: actions/upload-artifact@v3
        if: always() # always run even if the previous step fails
        with:
          name: ${{ matrix.os }}-build-artifact
          path: |
            build/reports
            build/test-results

  # The check for different kind of gradle Versions
  verify:
    strategy:
      matrix:
        GRADLE_VERSION:
        - "5.1.1"
        - "5.2.1"
        - "5.3.1"
        - "5.4.1"
        - "5.5.1"
        - "5.6.4"
        - "6.0.1"
        - "6.1.1"
        - "6.2.2"
        - "6.3"
        - "6.4.1"
        - "6.5.1"
        - "6.6.1"
        - "6.7.1"
        - "6.8.3"
        - "6.9"
        - "7.0.2"
        - "7.1"
    runs-on: ubuntu-latest
    needs: [basic, compliance]
    name: with Gradle ${{ matrix.GRADLE_VERSION }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          cache: 'gradle'
      - name: Gradle build
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_VERSION: ${{ matrix.GRADLE_VERSION }}
        with:
          arguments: check

  publish:
    runs-on: ubuntu-latest
    needs: verify
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'temurin'
          cache: 'gradle'
      - name: Gradle build
        uses: gradle/gradle-build-action@v2
        env:
          GRADLE_PUBLISH_KEY: ${{secrets.PUBLISH_KEY}}
          GRADLE_PUBLISH_SECRET: ${{secrets.PUBLISH_SECRET}}
        with:
          arguments: publishPlugins "-Pgradle.publish.key=${GRADLE_PUBLISH_KEY}" "-Pgradle.publish.secret=${GRADLE_PUBLISH_SECRET}"

