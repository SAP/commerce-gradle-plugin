// https://github.com/diffplug/spotless/issues/587
buildscript {
    configurations.classpath {
        resolutionStrategy {
            force 'org.eclipse.jgit:org.eclipse.jgit:5.7.0.202003110725-r'
        }
    }
}

plugins {
    id 'com.gradle.plugin-publish' version '0.14.0'
    id 'pl.allegro.tech.build.axion-release' version '1.13.1'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'com.diffplug.spotless' version '5.11.1'
    id 'com.github.ben-manes.versions' version '0.38.0'
    id "com.github.blueboxware.tocme" version "1.2"
}

scmVersion {
    hooks {
        pre 'fileUpdate', [
            file: 'README.md',
            pattern: {v, c -> /$v/},
            replacement: {v, c ->
                "$v"}
        ]
        pre 'commit'
    }
    checks {
        aheadOfRemote = false
    }
    scmVersion {
        localOnly = true
    }
    ignoreUncommittedChanges = false
}

tocme {
    doc 'docs/ccv2-validation.md'
}

tasks.named('assemble') {
    dependsOn('insertTocs')
}
tasks.named('checkTocs') {
    mustRunAfter('insertTocs')
}

spotless {
    format 'misc', {
        // define the files to apply `misc` to
        target '*.md', '.gitignore'

        // define the steps to apply to those files
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }
    groovyGradle {
        target '*.gradle' // default target of groovyGradle
        greclipse().configFile('gradle/greclipse.properties')
    }
    java {
        target 'src/*/java/**/*.java'
        removeUnusedImports()
        importOrderFile('gradle/spotless.importorder')
        eclipse().configFile('gradle/spotless.xml')
    }
    groovy {
        target 'src/*/groovy/**/*.groovy'
        importOrderFile('gradle/spotless.importorder')
        greclipse().configFile('gradle/greclipse.properties')
    }
}

group = 'sap.commerce'
project.version = scmVersion.version

repositories {
    jcenter()
}

dependencies {
    testImplementation('org.codehaus.groovy:groovy-all:2.5.13')
    testImplementation('org.spockframework:spock-core:1.3-groovy-2.5')
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

gradlePlugin {
    plugins {
        hybrisPlugin {
            id = 'sap.commerce.build'
            implementationClass = 'mpern.sap.commerce.build.HybrisPlugin'
        }
        hybrisCCv1Packaging {
            id = 'sap.commerce.ccv1.package'
            implementationClass = 'mpern.sap.commerce.ccv1.CloudServicesPackagingPlugin'
        }
        ccv2BuildSupport {
            id = 'sap.commerce.build.ccv2'
            implementationClass = 'mpern.sap.commerce.ccv2.CloudV2Plugin'
        }
    }
}
pluginBundle {
    website = 'https://github.com/SAP/commerce-gradle-plugin'
    vcsUrl = 'https://github.com/SAP/commerce-gradle-plugin'

    plugins {
        hybrisPlugin {
            displayName = 'SAP Commerce Bootstrap & Build Plugin'
            description = """Manage the whole development lifecycle of your SAP Commerce Project with Gradle"""
            tags = [
                'sap commerce',
                'sap hybris commerce',
                'hybris',
                'sap',
                'commerce',
                'bootstrap',
                'build'
            ]
        }
        hybrisCCv1Packaging {
            displayName = "SAP Commerce CCv1 Packaging Plugin"
            description = """Package your SAP Commerce project according to the CCv1 Deployment Packaging Guidelines"""
            tags = [
                'sap commerce',
                'sap hybris commerce',
                'hybris',
                'sap',
                'commerce',
                'ccv1',
                'package'
            ]
        }
        ccv2BuildSupport {
            displayName = "SAP Commerce Cloud in the Public Cloud Build Support Plugin"
            description = """Use the CCv2 manifest.json to configure and build your local development environment"""
            tags = [
                'sap commerce',
                'sap hybris commerce',
                'hybris',
                'sap',
                'commerce',
                'ccv2',
                'public cloud',
                'manifest'
            ]
        }
    }
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integrationTest/groovy')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn integrationTest

sourceSets {
    functionalTest {
        groovy.srcDir file('src/functionalTest/groovy')
        resources.srcDir file('src/functionalTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test, integrationTest
}

check.dependsOn functionalTest

gradlePlugin {
    testSourceSets sourceSets.functionalTest
}

tasks.withType(Test) {
    testLogging {
        events "passed", "failed", "skipped", "standardError"
    }
}
