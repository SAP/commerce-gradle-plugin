plugins {
    id "com.gradle.plugin-publish" version "0.10.0"
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'


group = 'mpern.sap.commerce'
version = '1.2.1'

repositories {
    jcenter()
}

dependencies {
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

gradlePlugin {
    plugins {
        hybrisPlugin {
            id = 'mpern.sap.commerce.build'
            implementationClass = 'mpern.sap.commerce.build.HybrisPlugin'
        }
        hybrisCCv1Packaging {
            id = 'mpern.sap.commerce.ccv1.package'
            implementationClass = 'mpern.sap.commerce.ccv1.CloudServicesPackagingPlugin'
        }
        ccv2BuildSupport {
            id = 'mpern.sap.commerce.build.ccv2'
            implementationClass = 'mpern.sap.commerce.ccv2.CloudV2Plugin'
        }
    }
}
pluginBundle {
    website = 'https://github.com/sap-commerce-tools/commerce-gradle-plugin/wiki'
    vcsUrl = 'https://github.com/sap-commerce-tools/commerce-gradle-plugin'

    plugins {
        hybrisPlugin {
            displayName = 'SAP (Hybris) Commerce Bootstrap & Build Plugin'
            description = """Automatically bootstrap your SAP (Hybris) Commerce Project
            from the SAP Support Portal and manage the whole software development lifecycle
            of SAP (Hybris) Commerce inside gradle
            """
            tags = ['sap commerce', 'sap hybris commerce', 'hybris', 'sap', 'commerce', 'bootstrap', 'build']
        }
        hybrisCCv1Packaging {
            displayName = "SAP Hybris CCv1 Packaging Plugin"
            description = """Configure and package your SAP (Hybris) Commerce project
            according to the Deployment Packagaging Guidelines v.2.3.3"""
            tags = ['sap commerce', 'sap hybris commerce', 'hybris', 'sap', 'commerce', 'ccv1', 'package']
        }
        ccv2BuildSupport {
            displayName = "SAP Hybris CCv2 Build Support Plugin"
            description = """Use the CCv2 manifest.json to build and configure your local development environmennt"""
            tags = ['sap commerce', 'sap hybris commerce', 'hybris', 'sap', 'commerce', 'ccv2', 'public cloud', 'manifest']
        }
    }
}

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integrationTest/groovy')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

check.dependsOn integrationTest

sourceSets {
    functionalTest {
        groovy.srcDir file('src/functionalTest/groovy')
        resources.srcDir file('src/functionalTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test, integrationTest
}

check.dependsOn functionalTest

gradlePlugin {
    testSourceSets sourceSets.functionalTest
}